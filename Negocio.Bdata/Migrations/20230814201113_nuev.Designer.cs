// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Negocio.Bdata.Data;

#nullable disable

namespace Negocio.Bdata.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230814201113_nuev")]
    partial class nuev
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Negocio.Bdata.Data.Entity.Cuenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Cuotas")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("NumeroCuenta")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("SaldoTotal")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "NumeroCuenta" }, "Cuenta_NumeroCuenta_UQ")
                        .IsUnique();

                    b.ToTable("cuentas");
                });

            modelBuilder.Entity("Negocio.Bdata.Data.Entity.Personas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DNI" }, "Persona_DNI_UQ")
                        .IsUnique();

                    b.ToTable("personas");
                });

            modelBuilder.Entity("Negocio.Bdata.Data.Entity.Saldo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Idsaldo")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("SaldoF")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("SaldoR")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex(new[] { "Idsaldo" }, "Cuenta_Idcuenta_UQ")
                        .IsUnique();

                    b.ToTable("saldos");
                });
#pragma warning restore 612, 618
        }
    }
}
